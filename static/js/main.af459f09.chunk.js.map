{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","services/movieService.js","services/genreService.js","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","services/userService.js","components/registerForm.jsx","components/loginForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","email","password","a","http","data","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","ex","loginWithJwt","Like","props","classes","liked","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_id","Table","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","MovieUrl","id","getMovie","movieId","saveMovie","body","getGenres","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleLike","index","indexOf","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","marginBottom","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","RegisterForm","username","window","location","LoginForm","from","pathname","Redirect","Logout","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af459f09.chunk.js","sourcesContent":["function init() {\n}\n\nfunction log(error) {\n\tconsole.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\n\r\nconst apiEndpoint ='/auth';\r\nconst tokenKey=\"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email,password) {\r\n\tconst {data:jwt}= await http.post(apiEndpoint, {email,password});\r\n\tlocalStorage.setItem(tokenKey,jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n\tlocalStorage.setItem(tokenKey,jwt);\r\n}\r\n\r\nexport function logout() {\r\n\tlocalStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n\ttry {\r\n\t\tconst jwt = localStorage.getItem(tokenKey);\r\n\t\treturn jwtDecode(jwt);\r\n\t\t\r\n\t}\r\n\tcatch (ex) {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport function getJwt() {\r\n\treturn localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n\tlogin,\r\n\tlogout,\r\n\tgetCurrentUser,\r\n\tloginWithJwt,\r\n\tgetJwt\r\n};","import React from 'react';\r\n\r\nconst Like = (props) => {\r\n\t\tlet classes = \"fa fa-heart\";\r\n\t\tif (!props.liked) classes += \"-o\";\r\n\t\treturn (<i onClick={props.onClick} style={{cursor: 'pointer'}} className={classes} aria-hidden=\"true\"></i>)\r\n}\r\n\r\nexport default Like;","import React,{Component} from 'react';\r\n\r\nclass TableHeader extends Component  {\r\n\traiseSort = path => {\r\n\t\tconst sortColumn = {...this.props.sortColumn};\r\n\t\tif (sortColumn.path === path)\r\n\t\t\tsortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\r\n\t\telse {\r\n\t\t\tsortColumn.path = path;\r\n\t\t\tsortColumn.order = 'asc';\r\n\t\t}\r\n\t\tthis.props.onSort(sortColumn);\r\n\t};\r\n\r\n\trenderSortIcon = (column) => {\r\n\t\tconst {sortColumn} = this.props;\r\n\r\n\t\tif (column.path !== sortColumn.path) return null;\r\n\t\tif (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\r\n\t\treturn <i className=\"fa fa-sort-desc\"></i>;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t{this.props.columns.map(column => \r\n\t\t\t\t\t\t<th \r\n\t\t\t\t\t\t\tkey={column.path || column.key} \r\n\t\t\t\t\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\t\t\t\t\tonClick={() => this.raiseSort(column.path)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{column.label} {this.renderSortIcon(column)} </th>)} \r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default TableHeader;\r\n\r\n","import React,{Component} from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component  {\r\n\r\n\trenderCell = (item,column) => {\r\n\t\tif (column.content) return column.content(item);\r\n\t\treturn _.get(item,column.path);\r\n\t};\r\n\r\n\tcreateKey = (item,column) => {\r\n\t\treturn item._id + (column.path || column.key);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {data , columns} =this.props;\r\n\t\treturn (<tbody>\r\n\t\t\t{data.map(item => (\r\n\t\t\t\t\t<tr key={item._id}>\r\n\t\t\t\t\t\t{columns.map(column => <td key={this.createKey(item,column)}>{this.renderCell(item,column)}</td>)}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t))}\r\n\t\t\t</tbody>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TableBody;\r\n\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody';\r\n\r\nconst Table = ({columns, sortColumn , onSort, data}) => {\r\n\treturn(\r\n\t\t<table className=\"table\">\r\n\t\t\t<TableHeader \r\n\t\t\t\tcolumns={columns} \r\n\t\t\t\tsortColumn={sortColumn} \r\n\t\t\t\tonSort={onSort}\r\n\t\t\t/>\r\n\t\t\t<TableBody \r\n\t\t\t\tcolumns={columns} \r\n\t\t\t\tdata={data}\r\n\t\t\t/>\r\n\t\t</table>\r\n\t)\r\n}\r\n\r\nexport default Table;\r\n","import React,{Component} from 'react';\r\nimport auth from '../services/authService';\r\nimport Like from './common/like';\r\nimport Table from './common/table';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass MoviesTable extends Component  {\r\n\tcolumns = [\r\n\t\t{\r\n\t\t\tpath: 'title', \r\n\t\t\tlabel : 'Title', \r\n\t\t\tcontent: movie =><Link to={`/movies/${movie._id}`}>{movie.title}</Link>},\r\n\t\t{path: 'genre.name', label : 'Genre'},\r\n\t\t{path: 'numberInStock', label : 'Stock'},\r\n\t\t{path: 'dailyRentalRate', label : 'Rate'},\r\n\t\t{key : \"like\" , content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>},\r\n\t\t\r\n\t];\r\n\r\n\tdeleteColumn = {\r\n\t\tkey : \"delete\" , content : movie => (\r\n\t\t\t\t<button \r\n\t\t\t\t\tonClick={() => this.props.onDelete(movie)} \r\n\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>)\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\tconst user = auth.getCurrentUser();\r\n\t\t\tif (user && user.isAdmin)\r\n\t\t\t\tthis.columns.push(this.deleteColumn)\r\n\t\t}\r\n\trender() {\r\n\t\tconst {movies, onSort ,sortColumn}=this.props;\t\r\n\t\treturn (\r\n\t\t\t<Table \r\n\t\t\t\tcolumns={this.columns} \r\n\t\t\t\tdata={movies} \r\n\t\t\t\tsortColumn={sortColumn} \r\n\t\t\t\tonSort={onSort} />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MoviesTable;\r\n\r\n\r\n// <tbody>\r\n// \t\t\t\t\t{movies.map(movie => (\r\n// \t\t\t  \t\t<tr key= {movie._id}>\r\n// \t\t\t  \t\t\t<td>{movie.title}</td>\r\n// \t\t\t  \t\t\t<td>{movie.genre.name}</td>\r\n// \t\t\t  \t\t\t<td>{movie.numberInStock}</td>\r\n// \t\t\t  \t\t\t<td>{movie.dailyRentalRate}</td>\r\n// \t\t\t  \t\t\t<td>\r\n// \t\t\t  \t\t\t\t<Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>\r\n// \t\t\t  \t\t\t</td>\r\n// \t\t\t  \t\t\t<td>\r\n// \t\t\t  \t\t\t\t<button \r\n// \t\t\t\t\t\t\t\tonClick={() => this.props.onDelete(movie)} \r\n// \t\t\t\t\t\t\t\tclassName=\"btn btn-danger btn-sm\"\r\n// \t\t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t\tDelete\r\n// \t\t\t\t\t\t\t</button>\r\n// \t\t\t  \t\t\t</td>\r\n// \t\t\t    \t</tr>\r\n// \t\t\t  \t\t))}\t\t\t\r\n// \t\t\t  </tbody>","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = (props) => {\r\n\t\r\n\tconst {itemsCount, pageSize , currentPage, onPageChange }=props;\r\n\tconst pagesCount = Math.ceil(itemsCount/pageSize);\r\n\tif (pagesCount === 1) return null;\r\n\tconst pages = _.range(1, pagesCount+1);\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul className=\"pagination\">\r\n\t\t\t{pages.map(page => (\r\n\t\t\t\t<li key={page} className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n\t\t\t\t\t<a onClick= {() => onPageChange(page)} style={{cursor: 'pointer'}} className=\"page-link\">{page}</a></li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t\t);\r\n};\r\n\r\nPagination.propTypes = {\r\n\titemsCount: PropTypes.number.isRequired, \r\n\tpageSize: PropTypes.number.isRequired, \r\n\tcurrentPage: PropTypes.number.isRequired, \r\n\tonPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\n\r\nconst ListGroup = (props) => {\r\n\tconst {items , textProperty , valueProperty, onItemSelect, selectedItem} = props;\r\n\treturn (\r\n\t\t<ul className=\"list-group\">\r\n\t\t\t{items.map(item => (\r\n\t\t\t\t<li\r\n\t\t\t\t\tkey={item[valueProperty]} \r\n\t\t\t\t\tstyle={{cursor: 'pointer'}}\r\n\t\t\t\t\tclassName={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\r\n\t\t\t\t\tonClick={() => onItemSelect(item)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{item[textProperty]}\r\n\t\t\t\t</li> \r\n\t\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n\r\n};\r\n\r\nListGroup.defaultProps= {\r\n\ttextProperty: \"name\",\r\n\tvalueProperty: \"_id\"\r\n}\r\n\r\nexport default ListGroup;","import http from './httpService';\r\n\r\nconst apiEndpoint ='/movies';\r\n\r\nfunction MovieUrl(id) {\r\n  return  `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(MovieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = {...movie};\r\n    delete body._id;\r\n    return http.put(MovieUrl(movie._id),body);\r\n  }\r\n  return http.post(apiEndpoint,movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(MovieUrl(movieId));\r\n}","import http from './httpService';\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, {Component} from \"react\";\r\nimport {toast} from 'react-toastify';\r\nimport MoviesTable from './moviesTable';\r\nimport Pagination from './common/pagination';\r\nimport ListGroup from './common/listGroup';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\nimport {paginate} from '../utils/paginate';\r\nimport { Link } from \"react-router-dom\";\r\nimport _ from 'lodash';\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Movies extends Component {\r\n\tstate = {\r\n\t\tmovies : [],\r\n\t\tgenres : [],\r\n\t\tcurrentPage: 1,\r\n\t\tpageSize: 4,\r\n\t\tsearchQuery: \"\",\r\n   \t\tselectedGenre: null,\r\n\t\tsortColumn: {path: 'title',order: 'asc'}\r\n\r\n\t};\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst {data} = await getGenres();\r\n\t\tconst genres = [{_id : \"\" , name: 'All Genres'},...data];\r\n\t\tconst {data : movies }= await getMovies();\r\n\t\tthis.setState({movies,genres});\r\n\t};\r\n\r\n\thandleDelete = async (movie) => {\r\n\t\tconst originalMovies = this.state.movies;\r\n\t\tconst movies = originalMovies.filter(m => m._id !== movie._id);\r\n\t\tthis.setState({movies});\r\n\t\ttry {\r\n\t\t\tawait deleteMovie(movie._id);\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 404)\r\n\t\t\t\ttoast.error('This movie has already been deleted.');\r\n\t\t\tthis.setState({movies : originalMovies});\r\n\t\t}\r\n\t};\r\n\r\n\thandlePageChange = (page) => {\r\n\t\tthis.setState({currentPage : page});\r\n\t};\r\n\r\n\thandleGenreSelect = (genre) => {\r\n\t\tthis.setState({selectedGenre : genre, searchQuery: \"\", currentPage: 1});\r\n\t};\r\n\r\n\thandleSearch = query => {\r\n    \tthis.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  \t};\r\n\r\n\thandleLike = (movie) => {\r\n\t\tconst movies = [...this.state.movies];\r\n\t\tconst index = movies.indexOf(movie);\r\n\t\tmovies[index] ={...movies[index]};\r\n\t\tmovies[index].liked = !movies[index].liked;\r\n\t\tthis.setState({movies})\r\n\t}\r\n\r\n\thandleSort = sortColumn => {\r\n\t\tthis.setState({sortColumn})\r\n\t}\r\n\r\n\tgetPagedData = () => {\r\n\t    const {\r\n\t      pageSize,\r\n\t      currentPage,\r\n\t      sortColumn,\r\n\t      selectedGenre,\r\n\t      searchQuery,\r\n\t      movies: allMovies\r\n\t    } = this.state;\r\n\r\n\t    let filtered = allMovies;\r\n\t    if (searchQuery)\r\n\t      filtered = allMovies.filter(m =>\r\n\t        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n\t      );\r\n\t    else if (selectedGenre && selectedGenre._id)\r\n\t      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n\t    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n\t    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n\t    return { totalCount: filtered.length, data: movies };\r\n  \t};\r\n\r\n\trender() {\r\n\t\tconst {length : count} =this.state.movies;\r\n\t\tconst {\r\n\t\t\tpageSize, \r\n\t\t\tcurrentPage, \r\n\t\t\tsearchQuery,\r\n\t\t\tsortColumn,\r\n\t\t} = this.state;\r\n\t\tconst{user}=this.props;\r\n\r\n\t\tconst {totalCount, data: movies} = this.getPagedData()\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"row\">\r\n\r\n\t\t\t\t<div className=\"col-3\">\r\n\t\t\t\t<ListGroup \r\n\t\t\t\t\titems={this.state.genres} \r\n\t\t\t\t\tselectedItem={this.state.selectedGenre}\r\n\t\t\t\t\tonItemSelect={this.handleGenreSelect}\r\n\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t{user && (<Link\r\n\t\t\t\t\tto='/movies/new'\r\n\t\t\t\t\tclassName='btn btn-primary'\r\n\t\t\t\t\tstyle={{marginBottom: 20}}\r\n\t\t\t\t>\r\n\t\t\t\t\tNew Movie\r\n\t\t\t\t</Link>)}\r\n\t\t\t\t<p>Showing {totalCount} in the database.</p>\r\n\t\t\t\t<SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\t\t\t\t<MoviesTable \r\n\t\t\t\t\tmovies={movies} \r\n\t\t\t\t\tsortColumn={sortColumn}\r\n\t\t\t\t\tonLike={this.handleLike} \r\n\t\t\t\t\tonSort={this.handleSort}\r\n\t\t\t\t\tonDelete={this.handleDelete}/>\r\n\t\t\t\t<Pagination \r\n\t\t\t\t\titemsCount={totalCount} \r\n\t\t\t\t\tpageSize={pageSize} \r\n\t\t\t\t\tcurrentPage={currentPage}\r\n\t\t\t\t\tonPageChange={this.handlePageChange} />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Movies;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n\tconst startIndex = (pageNumber - 1) * pageSize;\r\n\treturn _(items)\r\n\t\t.slice(startIndex)\r\n\t\t.take(pageSize)\r\n\t\t.value();\r\n}","import React from 'react';\r\n\r\nconst Customers = () => {\r\n\treturn <h1>Customers</h1>\r\n}\r\n\r\nexport default Customers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n\treturn <h1>Rentals</h1>\r\n}\r\n\r\nexport default Rentals;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n\treturn <h1>Not Found</h1>\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = ({user}) => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t  \t\t<Link className=\"navbar-brand\" to=\"/\">\r\n\t  \t\tVidly\r\n\t  \t\t</Link>\t\r\n\t  \t\t<button \r\n\t  \t\t\tclassName=\"navbar-toggler\" \r\n\t  \t\t\ttype=\"button\" \r\n\t  \t\t\tdata-toggle=\"collapse\" \r\n\t  \t\t\tdata-target=\"#navbarNavAltMarup\" \r\n\t  \t\t\taria-controls=\"navbarNavAltMarup\" \r\n\t  \t\t\taria-expanded=\"false\" \r\n\t  \t\t\taria-label=\"Toggle navigation\"\r\n\t  \t\t>\r\n\t    \t\t<span className=\"navbar-toggler-icon\" />\r\n\t  \t\t</button>\r\n\t  \t\t<div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarup\">\r\n\t    \t\t<div className=\"navbar-nav\">\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/movies\">\r\n\t\t\t       \t\tMovies\r\n\t\t\t        </Link>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/customers\">\r\n\t\t\t       \t\tCustomers\r\n\t\t\t        </Link>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/rentals\">\r\n\t\t\t       \t\tRentals\r\n\t\t\t        </Link>\r\n\t\t\t        {!user && (\r\n\t\t\t        <React.Fragment>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/login\">\r\n\t\t\t       \t\tLogin\r\n\t\t\t        </Link>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/register\">\r\n\t\t\t       \t\tRegister\r\n\t\t\t        </Link>\r\n\t\t\t    \t</React.Fragment>)}\r\n\t\t\t    \t{user && (\r\n\t\t\t        <React.Fragment>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/profile\">\r\n\t\t\t       \t\t{`Hello ${user.name}!`}\r\n\t\t\t        </Link>\r\n\t\t\t        <Link className=\"nav-item nav-link\" to=\"/logout\">\r\n\t\t\t       \t\tLogout\r\n\t\t\t        </Link>\r\n\t\t\t    \t</React.Fragment>)}\r\n\t\t\t    </div>\r\n\t  \t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default NavBar","import React from 'react';\r\n\r\nconst Input = ({name, label, error,...rest}) => {\r\n\treturn (\r\n\t\t<div className='form-group'>\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<input \r\n\t\t\t\t{...rest}\r\n\t\t\t\tname={name} \r\n\t\t\t\tid={name} \r\n\t\t\t\tclassName='form-control' \r\n\t\t\t/>\r\n\t\t\t{error && <div className='alert alert-danger'>{error}</div>}\r\n\t\t</div>\r\n\r\n\t);\r\n};\r\n\r\nexport default Input;","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n\tstate = {\r\n\t\tdata: {},\r\n\t\terrors: {}\r\n\t};\r\n\r\n\tvalidate = () => {\r\n\t\tconst options = {abortEarly : false};\r\n\t\tconst {error} = Joi.validate(this.state.data, this.schema, options);\r\n\t\tif (!error) return null;\r\n\r\n\t\tconst errors = {};\r\n\t\tfor (let item of error.details)\r\n\t\t\terrors[item.path[0]]=item.message;\r\n\t\treturn errors;\r\n\t};\r\n\r\n\tvalidateProperty = ({name, value}) => {\r\n\t\tconst obj = {[name]: value};\r\n\t\tconst schema = {[name]: this.schema[name]};\r\n\t\tconst {error} = Joi.validate(obj, schema);\r\n\t\treturn error ? error.details[0].message : null;\r\n\t};\r\n\r\n\thandleSubmit= e => {\r\n\t\te.preventDefault();\r\n\t\tconst errors = this.validate();\r\n\t\tthis.setState({errors : errors || {}});\r\n\t\tif (errors) return;\r\n\r\n\t\tthis.doSubmit();\r\n\t}\r\n\r\n\thandleChange = ({currentTarget: input}) => {\r\n\t\tconst errors= {...this.state.errors};\r\n\t\tconst errorMessage = this.validateProperty(input);\r\n\t\tif (errorMessage) errors[input.name] = errorMessage;\r\n\t\telse delete errors[input.name];\r\n\t\tconst data= {...this.state.data}\r\n\t\tdata[input.name]=input.value;\r\n\t\tthis.setState({data,errors});\r\n\t}\r\n\r\n\trenderButton(label) {\r\n\t\treturn (<button disabled={this.validate()} className='btn btn-primary'>{label}</button>)\r\n\t}\r\n\r\n\trenderSelect(name, label, options) {\r\n\t    const { data, errors } = this.state;\r\n\r\n\t    return (\r\n\t      <Select\r\n\t        name={name}\r\n\t        value={data[name]}\r\n\t        label={label}\r\n\t        options={options}\r\n\t        onChange={this.handleChange}\r\n\t        error={errors[name]}\r\n\t      />\r\n\t    );\r\n  \t}\r\n\r\n\trenderInput(name, label, type='text') {\r\n\t\tconst {data,errors} = this.state;\r\n\t\treturn (<Input type={type} name={name} value={data[name]} label={label} onChange={this.handleChange} error={errors[name]} />)\r\n\t}\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport {getMovie,saveMovie} from '../services/movieService';\r\nimport {getGenres} from '../services/genreService';\r\n\r\nclass MovieForm extends Form {\r\n\tstate = {\r\n\t\tdata : {\r\n\t\t\ttitle:\"\",\r\n\t\t\tgenreId:\"\",\r\n\t\t\tnumberInStock:\"\",\r\n\t\t\tdailyRentalRate:\"\"\r\n\t\t},\r\n\t\tgenres: [],\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tschema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n } ;\r\n\r\n  async populateGenres() {\r\n    const {data: genres} = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n\r\n    const {data : movie} = await getMovie(movieId);\r\n    this.setState({ data: this.mapToViewModel(movie) });\r\n    }\r\n\r\n    catch (ex) {\r\n    if (ex.response && ex.response.status === 404) \r\n      this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\nrender() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;","import http from './httpService';\r\n\r\nconst apiEndpoint ='/users';\r\n\r\nexport function register(user) {\r\n\treturn http.post(apiEndpoint, {\r\n\t\temail: user.username,\r\n\t\tpassword: user.password,\r\n\t\tname: user.name\r\n\t});\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport * as userService from '../services/userService';\r\nimport auth from '../services/authService';\r\n\r\nclass RegisterForm extends Form {\r\n\tstate = {\r\n\t\tdata: {username: '', password: '',name: ''},\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tschema = {\r\n\t\tusername: Joi.string().required().email().label('Username'),\r\n\t\tpassword: Joi.string().required().min(5).label('Password'),\r\n\t\tname: Joi.string().required().label('Name')\r\n\t};\r\n\r\n\tdoSubmit = async () => {\r\n\t\ttry {\r\n\t\t\tconst response= await userService.register(this.state.data);\r\n\t\t\tauth.loginWithJwt(response.headers['x-auth-token']);\r\n\t\t\twindow.location='/';\r\n\t\t}\r\n\t\tcatch(ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconst errors = {...this.state.errors};\r\n\t\t\t\terrors.username = ex.response.data;\r\n\t\t\t\tthis.setState({errors});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>REGISTER</h1>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t{this.renderInput('username','Username')}\r\n\t\t\t\t\t{this.renderInput('password','Password','password')}\r\n\t\t\t\t\t{this.renderInput('name','Name')}\r\n\t\t\t\t\t{this.renderButton('Register')}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport auth from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n\tstate = {\r\n\t\tdata: {username: '', password: ''},\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tschema = {\r\n\t\tusername: Joi.string().required().label('Username'),\r\n\t\tpassword: Joi.string().required().label('Password')\r\n\t};\r\n\r\n\tdoSubmit =  async () => {\r\n\t\ttry {\r\n\t\t\tconst {data} = this.state;\r\n\t\t\tawait auth.login(data.username,data.password);\r\n\t\t\tconst {state}=this.props.location;\r\n\t\t\twindow.location=state?state.from.pathname : '/';\r\n\t\t}\r\n\t\tcatch (ex) {\r\n\t\t\tif (ex.response && ex.response.status === 400) {\r\n\t\t\t\tconst errors = {...this.state.errors};\r\n\t\t\t\terrors.username=ex.response.data;\r\n\t\t\t\tthis.setState({errors});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>LOGIN</h1>\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t{this.renderInput('username','Username')}\r\n\t\t\t\t{this.renderInput('password','Password','password')}\r\n\t\t\t\t{this.renderButton('Login')}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n\t}\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport auth from '../services/authService';\r\nclass Logout extends Component {\r\n\tcomponentDidMount() {\r\n\t\tauth.logout();\r\n\t\twindow.location='/';\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport auth from '../../services/authService';\r\nimport {Route,Redirect} from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({path,component:Component,render,...rest}) => {\r\n\treturn (\r\n\t\t<Route \r\n\t\t\t{...rest}\r\n\t\t\trender={props => {\r\n\r\n\t\t\tif (!auth.getCurrentUser()) return <Redirect to={{\r\n\t\t\t\tpathname: '/login',\r\n\t\t\t\tstate: {from : props.location}\r\n\t\t\t}} />;\r\n\t\t\treturn Component ? <Component {...props}/> : render(props);\r\n\t\t}}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t/>);\r\n}\r\n\r\nexport default ProtectedRoute\r\n\r\n","import React, {Component} from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify';\nimport Movies from './components/movies';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport MovieForm from './components/movieForm';\nimport RegisterForm from './components/registerForm';\nimport LoginForm from './components/loginForm';\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nclass App extends Component {\n\tstate={};\n\n\tcomponentDidMount() {\n\t\tconst user = auth.getCurrentUser();\n\t\tthis.setState({user});\n\t}\n\n  render() {\n  \t  const {user} = this.state;\n\t  return (\n\t  \t<React.Fragment>\n\t  \t\t<ToastContainer />\n\t\t  \t<NavBar user={user} />\n\t\t\t<main className=\"container\">\n\t\t\t   \t<Switch>\n\t\t\t   \t\t<Route path=\"/register\" component={RegisterForm}/>\n\t\t\t   \t\t<Route path=\"/login\" component={LoginForm}/>\n\t\t\t   \t\t<Route path=\"/logout\" component={Logout}/>\n\t\t\t   \t\t<ProtectedRoute \n\t\t\t   \t\t\tpath=\"/movies/:id\" \n\t\t\t   \t\t\tcomponent={MovieForm}\n\t\t\t   \t\t/>\n\t\t\t   \t\t<Route \n\t\t\t   \t\t\tpath=\"/movies\" \n\t\t\t   \t\t\trender={props => <Movies {...props} user={this.state.user} />}\n\t\t\t   \t\t/>\n\t\t\t   \t\t<Route path=\"/customers\" component={Customers}/>\n\t\t\t   \t\t<Route path=\"/rentals\" component={Rentals}/>\n\t\t\t   \t\t<Route path=\"/not-found\" component={NotFound}/>\n\t\t\t   \t\t<Redirect from=\"/\" exact to=\"/movies\" />\n\t\t\t   \t\t<Redirect to=\"/not-found\" />\n\t\t\t   \t</Switch>\n\t\t\t   </main>\n\t\t </React.Fragment>\n  \t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconsole.log(\"SUPERMAN\",process.env.REACT_APP_NAME);\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}